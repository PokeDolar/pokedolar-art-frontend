{"version":3,"sources":["utils/randomRange.js","shared/components/Navigation/MainHeader.js","shared/context/user-context.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainNavigation.js","shared/components/pokemon/PokemonItem.js","pokemon/components/PokemonList.js","pokemon/pages/Pokemons.js","shared/hooks/http-hook.js","shared/components/pokemon/TypeIcon.js","shared/components/PokeArts/PokeArtDetails.js","shared/components/PokeArts/PokeArtTable.js","shared/components/PokeArts/PokeArtGallery.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","pokemon/pages/Pokemon.js","pokeart/pages/PokeArt.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/PokemonSelect.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","pokeart/pages/SubmitPokeArt.js","user/pages/userPage.js","admin/pages/Admin.js","admin/pages/ReviewPendingArts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","min","max","Math","floor","random","MainHeader","props","className","children","UserContext","createContext","isLoggedIn","user","login","NavLinks","useContext","console","log","to","isActive","match","location","pathname","startsWith","exact","admin","href","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","onClick","ReactDOM","createPortal","document","getElementById","Backdrop","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","POKEMONS","require","PokemonItem","hideClass","id","length","key","side","padStart","style","backgroundImage","alt","name","text","float","PokemonList","items","map","pokemon","english","Pokemons","useHttpClient","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","credentials","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","TypeIcon","typeName","typeString","src","toLowerCase","PokemonDetails","chosenArt","localData","apiData","process","filePath","encodeURI","type","randomRange","PokeArtTable","creatorText","author","twitterId","twitterDisplayName","postCount","lastCount","PokeArtGallery","artList","galleryName","types","usedArt","sort","slice","art","index","_id","effect","ModalOverlay","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","onCancel","Button","size","inverse","danger","disabled","ErrorModal","onClear","LoadingSpinner","asOverlay","Pokemon","loadedPokemon","setLoadedPokemon","officialArts","setOfficialArts","fanArts","setFanArts","setChosenArt","useParams","all_arts","officialPokeArts","concat","pokeArts","fetchPokemon","setPokemon","pokemon_id","responseDataPoke","fetchArt","validate","value","validators","isValid","validator","trim","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","POKEMON","PokemonSelect","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickImageHandler","click","ref","display","accept","pickedFile","fileIsValid","files","center","formReducer","formIsValid","inputId","inputs","SubmitPokeArt","initialInputs","initialFormValidity","formState","inputData","formValidity","useForm","artName","image","inputHandler","history","useHistory","artSubmitHandler","formData","FormData","append","Accept","userContext","twitterUsername","AdminReviewArts","pendingArts","setPendingArts","currentArt","setCurrentArt","currentPokemon","setCurrentPokemon","fetchArts","removeFirstElem","shift","changeApprovalRequest","status","e","App","setUser","fetchUser","Provider","path","PokeArt","Boolean","window","hostname","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5057c4ed.chunk.js","sourcesContent":["module.exports = function (min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import { createContext } from 'react';\n\nexport const UserContext = createContext({\n  isLoggedIn: false,\n  user: null,\n  login: () => {}\n});\n\nexport default UserContext\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { UserContext } from \"../../context/user-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = (props) => {\n  const user = useContext(UserContext);\n  console.log(user);\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink\n          to=\"/pokemon\"\n          isActive={(match, location) => {\n            if(location.pathname.startsWith(\"/pokeart\")){\n              return true;\n            }\n            if (!match) {\n              return false;\n            }\n            return true;\n          }}\n        >\n          ArtDex\n        </NavLink>\n      </li>\n\n      {user.isLoggedIn && (\n        <li>\n          <NavLink to=\"/submit\" exact>\n            Enviar\n          </NavLink>\n        </li>\n      )}\n      {user.isLoggedIn && (\n        <li>\n          <NavLink to=\"/users\">Minhas Artes</NavLink>\n        </li>\n      )}\n      {user.isLoggedIn && user.user.admin && (\n          <li>\n            <NavLink to =\"/admin\">Admin</NavLink>\n          </li>\n        )\n      }\n\n      {!user.isLoggedIn && (\n        <li>\n          <a href=\"http://192.168.15.57:5555/login\">Login</a>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop'\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">PokeDólar</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./PokemonItem.css\";\nconst POKEMONS = require(\"../../../pokemon/data/pokedex.json\");\nconst PokemonItem = (props) => {\n  let hideClass = \"\";\n  if (!props.id || props.id >= POKEMONS.length) {\n    hideClass = \" hide_all\";\n  }\n  return (\n    <li className={`pokemon-item${hideClass}`}>\n      <div className=\"pokemon-item__content\">\n        <Link\n          key={props.id}\n          to={`/pokemon/${props.id}`}\n          className=\"pokemon-item__anchor\"\n        >\n          {props.side && (\n            <div className=\"pokemon-item__info text-right\">\n              #{`${props.id}`.padStart(3, 0)}\n            </div>\n          )}\n          <div className=\"pokemon-item__icon\">\n            <div className=\"pokemon-item-icon__container\">\n              <div\n                className=\"pokemon-item__icon__img\"\n                style={{\n                  backgroundImage:\n                    \"url(/pokemon-icons/\" +\n                    `${props.id}`.padStart(3, 0) +\n                    \".png)\",\n                }}\n                alt={props.name}\n              />\n            </div>\n          </div>\n          {(!props.side && props.text) && (\n            <div\n              className=\"pokemon-item__info text-left\"\n              style={{ float: \"right\" }}\n            >\n              #{`${props.id}`.padStart(3, 0)}\n            </div>\n          )}\n        </Link>\n      </div>\n    </li>\n  );\n};\n\nexport default PokemonItem;\n","import React from \"react\";\nimport \"./PokemonList.css\";\n\nimport PokeItem from \"../../shared/components/pokemon/PokemonItem\"\nconst PokemonList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div>\n        <h1>No users found</h1>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"pokemon_list\">\n      {props.items.map((pokemon) => {\n        return (\n          <PokeItem\n            key={pokemon.id}\n            id={pokemon.id}\n            name={pokemon.name.english}\n          ></PokeItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default PokemonList;\n","import React from 'react';\nimport PokemonList from '../components/PokemonList'\nconst POKEMONS = require('../data/pokedex.json')\n\nconst Pokemons = () => {\n  \n  return <PokemonList items={POKEMONS}/>;\n}\n\nexport default Pokemons","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}, credentials = \"include\") => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          credentials,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from \"react\";\nimport \"./TypeIcon.css\";\n\nconst TypeIcon = (props) => {\n  let typeName = props.typeString;\n  console.log(typeName);\n  return (\n        <img className=\"type_icon\"\n          src={\"/type-icons/\" + `${typeName}`.toLowerCase() + \".png\"}\n          alt={props.name}\n        />\n  );\n};\n\nexport default TypeIcon;\n","import React from \"react\";\n\nimport TypeIcon from \"../pokemon/TypeIcon\";\nimport \"./PokeArtDetails.css\";\nimport \"../pokemon/Types.css\";\nimport randomRange from \"../../../utils/randomRange\";\nimport PokemonItem from \"../pokemon/PokemonItem\";\nconst PokemonDetails = (props) => {\n  let chosenArt = props.chosenArt;\n  let localData = props.localData;\n  console.log(chosenArt);\n  console.log(props.apiData);\n  let url = `${process.env.REACT_APP_API_URL}${chosenArt.filePath}`\n  console.log(url);\n  console.log(encodeURI(url));\n  return (\n    <React.Fragment>\n      <div className=\"pokemon-details__main-art\">\n        <div\n          className={\n            \"pokemon-details__img-container \" +\n            localData.type[randomRange(0, localData.type.length)]\n          }\n        >\n          <div className=\"pokemon-details__main-art__header__text\">\n            <div className=\"pokemon-details__main-art__header__text__name\">\n              {localData.name.english}\n            </div>\n            <div className=\"pokemon-details__main-art__header__text__info\">\n              <div className=\"pokemon-details__main-art__header__text__info__number\">\n                No. {`${localData.id}`.padStart(3)}\n              </div>\n              <div className=\"pokemon-details__main-art__header__text__info__types\">\n                {localData.type.map((typeString) => {\n                  return <TypeIcon key={typeString} typeString={typeString} />;\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"pokemon-anchors\">\n          <PokemonItem id={localData.id - 1} text={\"show\"}/>\n          <PokemonItem id={localData.id + 1} side={\"left\"} text={\"show\"} />\n        </div>\n          <div\n            className={\"pokemon-details__img\"}\n            style={{\n              backgroundImage: `url(` + encodeURI(url) + `)`,\n            }}\n            alt={props.name}\n          ><div className=\"pokemon-anchors-mobile\">\n          <PokemonItem id={localData.id - 1} text={\"show\"}/>\n          <PokemonItem id={localData.id + 1} side={\"left\"} text={\"show\"} />\n        </div></div>\n          \n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PokemonDetails;\n","import React from \"react\";\n\nimport \"./PokeArtTable.css\";\n\nconst PokeArtTable = (props) => {\n  let chosenArt = props.chosenArt;\n  console.log(chosenArt);\n  return (\n    <React.Fragment>\n      <div className=\"table-container\">\n      <table>\n        <tbody>\n      <tr>\n          <th>Tipo da Arte</th>\n          <td>\n            {(chosenArt.creatorText && \"Arte Oficial\") || (chosenArt.author &&  \"Arte de fã\") }\n          </td>\n        </tr>\n        <tr>\n          <th>Artista</th>\n          <td>{chosenArt.creatorText || (<a href={`https://twitter.com/i/user/${chosenArt.author.twitterId}`}>{chosenArt.author.twitterDisplayName}</a>)}</td>\n        </tr>\n        <tr>\n          <th>Quantidade de Tweets</th>\n          <td>{chosenArt.postCount || \"0\"}</td>\n        </tr>\n        <tr>\n          <th>Último Tweet</th>\n          <td>{chosenArt.lastCount || \"Não foi twittada\"}</td>\n        </tr>\n        </tbody>\n      </table>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PokeArtTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./PokeArtGallery.css\";\nimport \"../pokemon/Types.css\";\nconst PokeArtGallery = (props) => {\n  let artList = props.artList;\n  let galleryName = props.galleryName;\n  const types = props.types;\n  let usedArt = artList\n    .sort(() => 0.5 - Math.random())\n    .slice(0, Math.min(2, artList.length));\n  return (\n    <React.Fragment>\n      <div className=\"pokeartgallery-container\">\n        <div className=\"pokeart-gallery\">\n          <div className=\"gallery-name\">{galleryName}</div>\n          <div className=\"gallery-items\">\n            {usedArt.map((art, index) => {\n              return (\n                <Link\n                  key={art._id}\n                  to={`/pokeart/${art._id}`}\n                  className=\"pokeart-gallery-anchor\"\n                >\n                  <img\n                    className={`pokeart-gallery-img ${\n                      types[index % types.length]\n                    }`}\n                    src={process.env.REACT_APP_API_URL + art.filePath}\n                    alt={art.name}\n                    effect=\"opacity\"\n                  />\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PokeArtGallery;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;","import React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport PokemonDetails from \"../../shared/components/PokeArts/PokeArtDetails\";\nimport PokeArtTable from \"../../shared/components/PokeArts/PokeArtTable\";\nimport PokeArtGallery from '../../shared/components/PokeArts/PokeArtGallery'\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport randomRange from \"../../utils/randomRange\";\nimport \"./Pokemon.css\";\n\nconst POKEMONS = require(\"../data/pokedex.json\");\n\nconst Pokemon = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPokemon, setLoadedPokemon] = useState();\n  const [officialArts, setOfficialArts] = useState();\n  const [fanArts, setFanArts] = useState();\n  const [chosenArt, setChosenArt] = useState();\n\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      try {\n        const response = await sendRequest(\n          `${process.env.REACT_APP_API_URL}pokemon/${id}`\n        );\n\n        let all_arts = response.officialPokeArts.concat(\n          response.pokeArts\n        );\n        setOfficialArts(response.officialPokeArts);\n        setFanArts(response.pokeArts);\n        setChosenArt(all_arts[randomRange(0, all_arts.length)]);\n        setLoadedPokemon(response);\n      } catch (err) {}\n    };\n    fetchPokemon();\n  }, [id, sendRequest]);\n\n  let index = id - 1;\n  const pokemon = POKEMONS[index];\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPokemon && (\n        <React.Fragment>\n          <div className=\"pokemon-main\">\n            <PokemonDetails\n              chosenArt={chosenArt}\n              apiData={loadedPokemon}\n              localData={pokemon}\n            />\n            <div className=\"pokemon-side\">\n              <PokeArtTable chosenArt={chosenArt} />\n              {console.log(typeof(chosenArt))}\n              {officialArts && <PokeArtGallery artList={officialArts} types={pokemon.type} galleryName={\"Artes Oficiais\"}/>}\n              {fanArts.length > 0 && <PokeArtGallery artList={fanArts} types={pokemon.type}  galleryName={\"Artes dos Fãs\"}/>}\n            </div>\n            \n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Pokemon;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport PokemonDetails from \"../../shared/components/PokeArts/PokeArtDetails\";\nimport PokeArtTable from \"../../shared/components/PokeArts/PokeArtTable\";\nimport PokeArtGallery from '../../shared/components/PokeArts/PokeArtGallery'\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport \"../../pokemon/pages/Pokemon.css\"\n\nconst POKEMONS = require(\"../../pokemon/data/pokedex.json\");\n\nconst Pokemon = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPokemon, setLoadedPokemon] = useState();\n  const [officialArts, setOfficialArts] = useState();\n  const [fanArts, setFanArts] = useState();\n  const [chosenArt, setChosenArt] = useState();\n  const [pokemon, setPokemon] = useState()\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchArt = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_API_URL}pokeart/${id}`\n        );\n        \n        let pokemon_id = responseData.pokemon.id\n        const responseDataPoke = await sendRequest(`${process.env.REACT_APP_API_URL}pokemon/${pokemon_id}`);\n        console.log(responseDataPoke);\n        setPokemon(POKEMONS[pokemon_id-1])\n        setChosenArt(responseData);\n        setOfficialArts(responseDataPoke.officialPokeArts);\n        setFanArts(responseDataPoke.pokeArts);\n        setLoadedPokemon(responseDataPoke);\n      } catch (err) {}\n    };\n    fetchArt();\n  }, [id, sendRequest]);\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPokemon && (\n        <React.Fragment>\n          <div className=\"pokemon-main\">\n            <PokemonDetails\n              chosenArt={chosenArt}\n              localData={pokemon}\n            />\n            <div className=\"pokemon-side\">\n              <PokeArtTable chosenArt={chosenArt} />\n              {officialArts && <PokeArtGallery artList={officialArts} types={pokemon.type} galleryName={\"Artes Oficiais\"}/>}\n              {fanArts.length > 0 && <PokeArtGallery artList={fanArts} types={pokemon.type}  galleryName={\"Artes dos Fãs\"}/>}\n            </div>\n            \n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Pokemon;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./PokemonSelect.css\";\nimport PokemonItem from '../pokemon/PokemonItem'\n\nconst POKEMON = require(\"../../../pokemon/data/pokedex.json\");\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst PokemonSelect = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    console.log(event);\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element = (\n      <div className=\"pokemon-selector\">\n    <select \n    onChange={changeHandler}\n    onBlur={touchHandler}>\n\n      {POKEMON.map((pokemon) => {\n        return (\n          <option value={pokemon.id}>\n             {pokemon.name.english} #{`${pokemon.id}`.padStart(3, 0)}\n          </option>\n        );\n      })}\n    </select>\n    <PokemonItem id={value || 1}/>\n    </div>\n  );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default PokemonSelect;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <React.Fragment>\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <Button type=\"button\" onClick={pickImageHandler}>\n          Escolher Imagem\n        </Button>}\n        \n        </div>\n        {previewUrl && <Button type=\"button\" onClick={pickImageHandler}>\n          Trocar Imagem\n        </Button>}\n      </div>\n      </React.Fragment>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    console.log(value);\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport PokemonSelect from \"../../shared/components/FormElements/PokemonSelect\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./SubmitPokeArt.css\";\nimport { UserContext } from \"../../shared/context/user-context\";\n\nconst SubmitPokeArt = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      artName: {\n        value: \"\",\n        isValid: false,\n      },\n      pokemon: {\n        value: null,\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const artSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData();\n      console.log(formData);\n      formData.append(\"pokemon\", formState.inputs.pokemon.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      formData.append(\"artName\", formState.inputs.artName.value);\n      console.log(\"hmmm\");\n      await sendRequest(\n        `${process.env.REACT_APP_API_URL}pokeart/`,\n        \"POST\",\n        formData,\n\n        {\n          Accept: \"application/json\",\n          \"Access-Control-Allow-Credentials\": true,\n        },\n\n        \"include\"\n      );\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"pokeart-form\" onSubmit={artSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <div className=\"art-div\">\n          <ImageUpload\n            id=\"image\"\n            onInput={inputHandler}\n            errorText=\"Please provide an image.\"\n          />\n        </div>\n        <div className=\"data-div\">\n          <Input\n            id=\"artName\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Título\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n          />\n          <PokemonSelect\n            id=\"pokemon\"\n            type=\"select\"\n            label=\"Pokemon\"\n            onInput={inputHandler}\n            errorText=\"Please enter a valid title.\"\n            validators={[VALIDATOR_REQUIRE()]}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            Enviar\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default SubmitPokeArt;\n","import React, { useEffect, useState, useContext } from \"react\";\n\nimport { UserContext } from '../../shared/context/user-context'\n\nconst Pokemon = () => {\n\n  const userContext = useContext(UserContext);\n  console.log(userContext);\n  return (\n    <React.Fragment>\n      {userContext.user && (\n        <React.Fragment>\n          dsnajkdnasjkdsanjkdas\n          {userContext.user.twitterDisplayName}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Pokemon;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../../shared/context/user-context\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nimport './Admin.css'\nconst Pokemon = () => {\n  const userContext = useContext(UserContext);\n\n  return (\n    <React.Fragment>\n      <div className=\"admin-main\">\n        {userContext.user && (\n          <React.Fragment>\n            {!userContext.user.admin && <Redirect to=\"/\" />}\n            <Button href=\"admin/pendingarts\">Ver artes pendentes</Button>\n            {userContext.user.twitterUsername}\n            {userContext.user.admin}\n          </React.Fragment>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Pokemon;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport { UserContext } from \"../../shared/context/user-context\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Button from \"../../shared/components/FormElements/Button\";\nimport PokemonDetails from \"../../shared/components/PokeArts/PokeArtDetails\";\nimport PokeArtTable from \"../../shared/components/PokeArts/PokeArtTable\";\n\nimport \"./ReviewPendingArts.css\";\nimport PokeArtGallery from \"../../shared/components/PokeArts/PokeArtGallery\";\n\nconst POKEMONS = require(\"../../pokemon/data/pokedex.json\");\nconst AdminReviewArts = () => {\n  const userContext = useContext(UserContext);\n  const [pendingArts, setPendingArts] = useState(false);\n  const [currentArt, setCurrentArt] = useState(false);\n  const [currentPokemon, setCurrentPokemon] = useState(false);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fetchArts = async () => {\n      try {\n        const response = await sendRequest(\n          `${process.env.REACT_APP_API_URL}pokeart/pending`,\n          \"GET\"\n        );\n        setPendingArts(response);\n        setCurrentArt(response[0]);\n        setCurrentPokemon(POKEMONS[response[0].pokemon.id - 1]);\n      } catch (err) {}\n    };\n    fetchArts();\n  }, [sendRequest]);\n  const removeFirstElem = () => {\n    console.log(pendingArts);\n    if (pendingArts) {\n      pendingArts.shift();\n      setPendingArts(pendingArts);\n      if (pendingArts.length) {\n        setCurrentArt(pendingArts[0]);\n        setCurrentPokemon(POKEMONS[pendingArts[0].pokemon.id - 1]);\n      }\n    }\n  };\n\n  const changeApprovalRequest = async (art, status) => {\n    try {\n      const response = await sendRequest(\n        `${process.env.REACT_APP_API_URL}pokeart/changeapproval?id=${art._id}&status=${status}`,\n        \"PATCH\"\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const acceptCurrentArt = () => {\n    try {\n      changeApprovalRequest(currentArt, \"true\");\n      removeFirstElem();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const denyCurrentArt = () => {\n    try {\n      changeApprovalRequest(currentArt, \"false\");\n      removeFirstElem();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {/* <Redirect to=\"/\"/> */}\n\n      {!isLoading && pendingArts.length != 0 && currentArt && currentPokemon && (\n        <React.Fragment>\n          <div className=\"review-art\">\n            <div className=\"pending-art-main\">\n              <PokemonDetails\n                chosenArt={currentArt}\n                localData={currentPokemon}\n              />\n            </div>\n            <div className=\"side-panel\">\n              <PokeArtTable chosenArt={currentArt} />\n              <div className=\"action-panel\">\n                <div className=\"action-title\">Actions</div>\n                <div className=\"action-container\">\n                  <Button onClick={acceptCurrentArt}>ADICIONAR</Button>\n                  <Button onClick={denyCurrentArt}>REMOVER</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      {!isLoading && pendingArts.length == 0 && (\n        <React.Fragment>\n          <div className=\"no-pending-arts\">\n          Nenhuma arte pendente.\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default AdminReviewArts;\n","import React, { useState, useCallback, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport MainNav from \"./shared/components/Navigation/MainNavigation\";\n\nimport Pokemons from \"./pokemon/pages/Pokemons\";\nimport Pokemon from \"./pokemon/pages/Pokemon\";\nimport PokeArt from \"./pokeart/pages/PokeArt\";\nimport SubmitPokeArt from \"./pokeart/pages/SubmitPokeArt\";\nimport User from \"./user/pages/userPage\";\nimport Admin from \"./admin/pages/Admin\";\nimport ReviewPendingArts from \"./admin/pages/ReviewPendingArts\"\nimport { UserContext } from \"./shared/context/user-context\";\nimport { useHttpClient } from \"./shared/hooks/http-hook\";\n\nconst App = () => {\n  const [user, setUser] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const login = useCallback((user) => {\n    setUser(user);\n  }, []);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await sendRequest(\n          `${process.env.REACT_APP_API_URL}user/`,\n          \"GET\"\n        );\n        console.log(response);\n        setUser(response);\n      } catch (err) {}\n    };\n    fetchUser();\n  }, [sendRequest]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        isLoggedIn: !!user,\n        user: user,\n        login: login,\n      }}\n    >\n      <Router>\n        <main>\n          <MainNav />\n        </main>\n        <content>\n          <Switch>\n            <Route path=\"/\" exact>\n              <h1> Home</h1>\n            </Route>\n            <Route path=\"/user\" exact>\n              <User />\n            </Route>\n            <Route path=\"/pokemon\" exact>\n              <Pokemons />\n            </Route>\n            <Route path=\"/pokemon/:id\">\n              <Pokemon />\n            </Route>\n            <Route path=\"/submit\">\n              <SubmitPokeArt />\n            </Route>\n            <Route path=\"/pokeart/:id\">\n              <PokeArt />\n            </Route>\n            <Route path=\"/admin/\" exact>\n              <Admin />\n            </Route>\n            <Route path=\"/admin/pendingarts\" exact>\n              <ReviewPendingArts />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </content>\n      </Router>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}